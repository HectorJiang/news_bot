name: Build & Deploy news_bot

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    container:
      image: hectorjiang/go-tdlib:latest  # 你的预构建 TDLib 镜像

    steps:
      # 1️⃣ 拉取仓库代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ 下载 Go 依赖
      - name: Download Go dependencies
        run: go mod tidy

      # 3️⃣ 构建可执行文件
      - name: Build news_bot
        run: go build -o news_bot main.go

      # 4️⃣ 登录 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5️⃣ 构建并推送 Docker 镜像
      - name: Build & Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/news_bot:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/news_bot:${{ github.sha }}

      # 6️⃣ 部署到服务器 via SSH (用密码)
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SSH_PASSWORD }}
          script: |
            # 停止旧容器
            docker stop news_bot || true
            docker rm news_bot || true

            # 拉取最新镜像
            docker pull ${{ secrets.DOCKER_USERNAME }}/news_bot:${{ github.sha }}

            # 运行容器
            docker run -d \
              --name news_bot \
              --restart=always \
              -v /opt/news_bot:/app/tdlib-db \
              ${{ secrets.DOCKER_USERNAME }}/news_bot:${{ github.sha }}
